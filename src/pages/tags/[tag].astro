---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import type { MarkdownInstance } from "../../../node_modules/astro/dist/@types/astro";

type Post = MarkdownInstance<Record<string, any>>;

export async function getStaticPaths(): Promise<unknown> {
  const allPosts = await Astro.glob("../posts/*.md");

  return [
    { params: { tag: "astro" }, props: { posts: allPosts } },
    { params: { tag: "successes" }, props: { posts: allPosts } },
    { params: { tag: "community" }, props: { posts: allPosts } },
    { params: { tag: "blogging" }, props: { posts: allPosts } },
    { params: { tag: "setbacks" }, props: { posts: allPosts } },
    { params: { tag: "learning in public" }, props: { posts: allPosts } },
  ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// 返回包含自身标签的帖子
const filteredPosts = (posts as Post[]).filter((post: Post) =>
  post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts.map((post: Post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
